program cl13test;

{$mode objfpc}{$h+}

uses
  Cl13, DateUtils, Math, SysUtils;

var
  k : longint;
  a : double;
  v, v1, v2, v3 : TVector;
  B, B1, B2, B3 : TBivector;
  I, I1, I2, I3 : TTrivector;
  Q, Q1, Q2, Q3 : TQuadrivector;
  M, M1, M2, M3 : TMultivector;
  StartTime: TDateTime;

  function Rnd: double;
  var
    i: longint;
  begin
    i := RandomRange(-MaxSmallint, MaxSmallint);
    while (i = 0) do
    begin
      i := RandomRange(-MaxSmallint, MaxSmallint);
    end;
    result := i;
  end;


begin
  StartTime := Now;

  Randomize;
  writeln('CL13 TEST: begin');
  for k := 0 to 100000 do
  begin
    a := Rnd;
    v := Rnd*e1   + Rnd*e2   + Rnd*e3   + Rnd*e4;
    B := Rnd*e12  + Rnd*e13  + Rnd*e14  + Rnd*e23  + Rnd*e24  + Rnd*e34;
    I := Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234;
    Q := Rnd*e1234;
    M := a + v + B + I + Q;

    // TQuadrivector
    M  := Q.ToMultivector;
    if Q.Dot          (Q) <> M.Dot                  (M) then writeln('{B84CA7B1-A817-4DAD-AAA2-673B33C3BA4C}');
    if Q.Dot          (M) <> M.Dot                  (Q) then writeln('{3DDF0FB7-B61D-4EF6-8507-FF71AACB7CB9}');
    if Q.Wedge        (Q) <> M.Wedge                (M) then writeln('{B37A1F7A-9139-42F4-BC98-D9BDB42F06A7}');
    if Q.Wedge        (M) <> M.Wedge                (Q) then writeln('{71428F05-C10B-4A29-9D08-063116B6465C}');
    if (Q*M)              <> (M*Q)                      then writeln('{206B1C8E-B682-45D7-B5D7-74F1FA44301F}');
    if (Q*Q)              <> (M*M)                      then writeln('{713F6B88-1CD0-454C-B55B-581FD48E4801}');
    //if not Q.Reciprocal.SameValue(M.Reciprocal)         then writeln('{0BE76E6C-8545-4037-ADDC-12CC1371C8D5}');
    if Q.Conjugate        <> M.Conjugate                then writeln('{4A12ECF2-CBB9-437A-97F9-EF3F0E20B5F2}');
    if Q.Inverse          <> M.Inverse                  then writeln('{61259540-CC98-4A67-9CA3-948A150C6615}');
    if Q.Dual             <> M.Dual                     then writeln('{826A2A28-D383-4A17-9C28-F713C21A0041}');
    if Q.Norm             <> M.ExtractQuadrivector.Norm then writeln('{AF8A2D67-541E-43A4-A666-007584911B4E}');
    if Q.SquaredNorm      <> M.SquaredNorm              then writeln('{966128E8-F2E3-4210-8C3A-51C5E8D40EE8}');
    if Q.Reverse          <> M.Reverse                  then writeln('{1B266985-F6BC-4E49-B9DC-9A257D679810}');
    //if not SameValue(Q/Q, 1)                            then writeln('{E5CCFA33-A8A6-42D9-AF1A-8D9CE23A54CD}');

    if (Q.Projection(u1   ) <> M.Projection(u1   .ToMultivector)) then writeln('{61A35EE7-8945-4640-A322-196CB69C577B}');
    if (Q.Projection(u2   ) <> M.Projection(u2   .ToMultivector)) then writeln('{64762353-9811-4F91-8281-F3390828172F}');
    if (Q.Projection(u3   ) <> M.Projection(u3   .ToMultivector)) then writeln('{9769AB92-5EEE-4F04-A3EA-70A83F58B884}');
    if (Q.Projection(u4   ) <> M.Projection(u4   .ToMultivector)) then writeln('{6BBE11DC-5855-4D4B-B39E-4F8513D0FEC9}');
    if (Q.Projection(u12  ) <> M.Projection(u12  .ToMultivector)) then writeln('{88AEFD13-9788-4601-969F-4D80C6DE4DE8}');
    if (Q.Projection(u13  ) <> M.Projection(u13  .ToMultivector)) then writeln('{32DAA975-7FE6-4373-B35E-5F3836F2F58A}');
    if (Q.Projection(u14  ) <> M.Projection(u14  .ToMultivector)) then writeln('{C5DE7ABF-AC08-4000-B39C-E3A29D3122C1}');
    if (Q.Projection(u23  ) <> M.Projection(u23  .ToMultivector)) then writeln('{6A3A02E7-9470-4A4D-8A0C-D5B972522578}');
    if (Q.Projection(u24  ) <> M.Projection(u24  .ToMultivector)) then writeln('{038CD08E-880D-4294-9C4F-912FC64D0EC0}');
    if (Q.Projection(u34  ) <> M.Projection(u34  .ToMultivector)) then writeln('{AD02A4A0-9D31-4185-9D39-B9DF036C0EA7}');
    if (Q.Projection(u123 ) <> M.Projection(u123 .ToMultivector)) then writeln('{887C3D48-0FB8-4A64-87C1-FC630D64745E}');
    if (Q.Projection(u124 ) <> M.Projection(u124 .ToMultivector)) then writeln('{93AC7210-7A7D-4018-BAB7-AB2CB69D7A2A}');
    if (Q.Projection(u134 ) <> M.Projection(u134 .ToMultivector)) then writeln('{5D13FD68-A265-4A85-B757-833D11BE67A5}');
    if (Q.Projection(u234 ) <> M.Projection(u234 .ToMultivector)) then writeln('{4AA54018-88B6-4291-B10B-ED0037D2ECAB}');
    if (Q.Projection(u1234) <> M.Projection(u1234.ToMultivector)) then writeln('{40243BA9-2058-4F18-96F6-ED8B7201D842}');

    if (Q.Rejection (u1   ) <> M.Rejection (u1   .ToMultivector)) then writeln('{236F890F-58AF-4616-AC23-F07B54501A6C}');
    if (Q.Rejection (u2   ) <> M.Rejection (u2   .ToMultivector)) then writeln('{C83ED5E7-83D9-41AF-9540-DD0FB8D4E2B5}');
    if (Q.Rejection (u3   ) <> M.Rejection (u3   .ToMultivector)) then writeln('{6F165AD1-ABA1-41FF-AD17-BFD58176444C}');
    if (Q.Rejection (u4   ) <> M.Rejection (u4   .ToMultivector)) then writeln('{0940F8E0-239D-400E-B5AE-BF39322BA863}');
    if (Q.Rejection (u12  ) <> M.Rejection (u12  .ToMultivector)) then writeln('{C64F6777-4815-43D6-828C-0F782E886847}');
    if (Q.Rejection (u13  ) <> M.Rejection (u13  .ToMultivector)) then writeln('{0D620481-A7F7-489C-8CE4-6776FCF1B08D}');
    if (Q.Rejection (u14  ) <> M.Rejection (u14  .ToMultivector)) then writeln('{F378C827-DC1F-4C58-AE09-0F9CCFFEEFF3}');
    if (Q.Rejection (u23  ) <> M.Rejection (u23  .ToMultivector)) then writeln('{08D03013-F364-454B-9301-DD20D74C51CF}');
    if (Q.Rejection (u24  ) <> M.Rejection (u24  .ToMultivector)) then writeln('{AC7BB464-03D8-469D-AA0C-DE9125FC1E47}');
    if (Q.Rejection (u34  ) <> M.Rejection (u34  .ToMultivector)) then writeln('{F2CBB642-3121-4DE5-BA14-1BBC9EA60245}');
    if (Q.Rejection (u123 ) <> M.Rejection (u123 .ToMultivector)) then writeln('{E3CD3F32-3FB9-4E41-8A01-9516B60F00F0}');
    if (Q.Rejection (u124 ) <> M.Rejection (u124 .ToMultivector)) then writeln('{9CABEA26-229F-4FA1-B93E-8559A7658CDB}');
    if (Q.Rejection (u134 ) <> M.Rejection (u134 .ToMultivector)) then writeln('{6E40137B-8FE8-467F-96B6-5948618A3F78}');
    if (Q.Rejection (u234 ) <> M.Rejection (u234 .ToMultivector)) then writeln('{2B02F399-7DA2-4DD6-9DC0-C234CECAFB2E}');
    if (Q.Rejection (u1234) <> M.Rejection (u1234.ToMultivector)) then writeln('{E74550A4-1D2C-4222-80FF-CDF02530F9A6}');

    if (Q.Reflection(u1   ) <> M.Reflection(u1   .ToMultivector)) then writeln('{483AF760-2FF9-4B16-9A83-38C5B07E9C96}');
    if (Q.Reflection(u2   ) <> M.Reflection(u2   .ToMultivector)) then writeln('{E88CBBD1-B2EC-4304-9B2A-8A5BB059FFB2}');
    if (Q.Reflection(u3   ) <> M.Reflection(u3   .ToMultivector)) then writeln('{392786C0-FE45-4EF7-9DC8-65A2C896DB99}');
    if (Q.Reflection(u4   ) <> M.Reflection(u4   .ToMultivector)) then writeln('{00864958-1F63-4337-AB4B-B031427A4168}');
    if (Q.Reflection(u12  ) <> M.Reflection(u12  .ToMultivector)) then writeln('{89EAC47A-466E-4C43-859C-A626F3A0CFFE}');
    if (Q.Reflection(u13  ) <> M.Reflection(u13  .ToMultivector)) then writeln('{B627D943-9A44-4F9E-917D-2E33C3C20C81}');
    if (Q.Reflection(u14  ) <> M.Reflection(u14  .ToMultivector)) then writeln('{CDFBEEF8-F433-4991-A050-861AF8C66A83}');
    if (Q.Reflection(u23  ) <> M.Reflection(u23  .ToMultivector)) then writeln('{C9CB1F16-92DF-4BA8-818F-F6C7A5293543}');
    if (Q.Reflection(u24  ) <> M.Reflection(u24  .ToMultivector)) then writeln('{7D4E0C45-566B-4FBA-8A7C-CDD3DD8015E7}');
    if (Q.Reflection(u34  ) <> M.Reflection(u34  .ToMultivector)) then writeln('{4021BD5F-5DA7-4847-8055-998C2693F2CD}');
    if (Q.Reflection(u123 ) <> M.Reflection(u123 .ToMultivector)) then writeln('{EBE30C6A-FE29-4649-B5F5-DC2196516D2A}');
    if (Q.Reflection(u124 ) <> M.Reflection(u124 .ToMultivector)) then writeln('{A366FDD5-CA4E-4545-A015-E92D3A74848B}');
    if (Q.Reflection(u134 ) <> M.Reflection(u134 .ToMultivector)) then writeln('{A82F9737-4E05-494C-8341-ACCF141C25F7}');
    if (Q.Reflection(u234 ) <> M.Reflection(u234 .ToMultivector)) then writeln('{AD469E03-1660-4503-9134-24C69CA2D5CD}');
    if (Q.Reflection(u1234) <> M.Reflection(u1234.ToMultivector)) then writeln('{BAA2C382-C921-4B58-8325-DDA40522278A}');

    if (Q.Rotation(u1 ,  u2  ) <> M.Rotation(u1  .ToMultivector, u2  .ToMultivector)) then writeln('{47069F34-1ADB-430C-8291-52C2EA11BF2F}');
    if (Q.Rotation(u2 ,  u3  ) <> M.Rotation(u2  .ToMultivector, u3  .ToMultivector)) then writeln('{32818485-16CE-4342-9B3E-B37D19F36889}');
    if (Q.Rotation(u3 ,  u4  ) <> M.Rotation(u3  .ToMultivector, u4  .ToMultivector)) then writeln('{C79323A3-DCEA-4BE0-BE84-7ACD5451A4EE}');
    if (Q.Rotation(u4 ,  u1  ) <> M.Rotation(u4  .ToMultivector, u1  .ToMultivector)) then writeln('{2DC48B05-27C1-4030-9DB1-346580D893C4}');
    if (Q.Rotation(u12,  u13 ) <> M.Rotation(u12 .ToMultivector, u13 .ToMultivector)) then writeln('{61371CA2-7136-41B1-B017-DF6E5C255489}');
    if (Q.Rotation(u13,  u14 ) <> M.Rotation(u13 .ToMultivector, u14 .ToMultivector)) then writeln('{6DDBC9FA-3D8C-49DA-89C6-CD73C47A2789}');
    if (Q.Rotation(u14,  u23 ) <> M.Rotation(u14 .ToMultivector, u23 .ToMultivector)) then writeln('{391B0BB4-AD0A-49A7-9145-39B0A478EEB9}');
    if (Q.Rotation(u23,  u24 ) <> M.Rotation(u23 .ToMultivector, u24 .ToMultivector)) then writeln('{523EFF8E-D14D-4694-9BDF-9D1A0C686396}');
    if (Q.Rotation(u24,  u34 ) <> M.Rotation(u24 .ToMultivector, u34 .ToMultivector)) then writeln('{C670966D-AA84-466B-9043-E135AE3E00DF}');
    if (Q.Rotation(u34,  u14 ) <> M.Rotation(u34 .ToMultivector, u12 .ToMultivector)) then writeln('{544FF4F5-2CB7-4831-8097-2C451BF95232}');
    if (Q.Rotation(u123, u124) <> M.Rotation(u123.ToMultivector, u124.ToMultivector)) then writeln('{EFCEEB65-3E23-4AD4-B4D3-C18BE8AD3FA1}');
    if (Q.Rotation(u124, u134) <> M.Rotation(u124.ToMultivector, u134.ToMultivector)) then writeln('{9DEF3B2D-4B18-4B1A-8E57-00ACC1E5653B}');
    if (Q.Rotation(u134, u234) <> M.Rotation(u134.ToMultivector, u234.ToMultivector)) then writeln('{58278162-092F-4266-8FE5-6B4368069C00}');
    if (Q.Rotation(u234, u123) <> M.Rotation(u234.ToMultivector, u123.ToMultivector)) then writeln('{E18B233A-966B-4037-999C-97C7D8F2B5A1}');

    // TTrivector
    M  := I.ToMultivector;
    if I.Dot          (I) <> M.Dot               (M) then writeln('{4E3BDFE3-7CD4-4191-ABB3-D90CF09E3FCC}');
    if I.Dot          (M) <> M.Dot               (I) then writeln('{E1465149-82BA-4FA1-B651-B8B1A061C27A}');
    if I.Wedge        (I) <> M.Wedge             (M) then writeln('{A57C2C52-5399-4B5F-A29B-52053D23C651}');
    if I.Wedge        (M) <> M.Wedge             (I) then writeln('{1FE84617-158B-4D25-BE40-5A26A37BA8FA}');
    if (I*M)              <> (M*I)                   then writeln('{919FF702-E102-4C19-9D78-AB2BDB2B073E}');
    if (I*I)              <> (M*M)                   then writeln('{DAEC0267-2214-4173-B321-631B8B93B3D1}');
    if not I.Reciprocal.SameValue(M.Reciprocal)      then writeln('{9598F268-6196-4074-AE18-4042222D5CB3}');
    if I.Conjugate        <> M.Conjugate             then writeln('{6860E223-A300-4C12-9CE0-61140AEE7E0C}');
    if I.Inverse          <> M.Inverse               then writeln('{055B3A75-B2AA-4CF2-8003-C1C5B605A641}');
    if I.Dual             <> M.Dual                  then writeln('{A508AD7C-679D-45BD-9273-546537ABBC0A}');
    if I.Norm             <> M.ExtractTrivector.Norm then writeln('{8266D72A-896C-42F2-BE67-9FB60A4E00C9}');
    if I.SquaredNorm      <> M.SquaredNorm           then writeln('{8A4BE64C-602C-4487-8187-332287938B42}');
    if I.Reverse          <> M.Reverse               then writeln('{0AD09754-FBE9-490F-8B04-4C2E8EE6006B}');
    if not (I/I).SameValue(1)                        then writeln('{E055123A-8413-4D78-9723-35D5E5098AFD}');

    if (I.Projection(u1   ) <> M.Projection(u1   .ToMultivector)) then writeln('{2B4C0336-72C7-4F45-97EA-1177BF631B63}');
    if (I.Projection(u2   ) <> M.Projection(u2   .ToMultivector)) then writeln('{5949724F-76BF-4852-8342-09A3FD5FC497}');
    if (I.Projection(u3   ) <> M.Projection(u3   .ToMultivector)) then writeln('{BC77CA87-A928-4BE8-A96E-DB9DCA308FB7}');
    if (I.Projection(u4   ) <> M.Projection(u4   .ToMultivector)) then writeln('{EA28C75F-1E41-4834-92FB-964249775843}');
    if (I.Projection(u12  ) <> M.Projection(u12  .ToMultivector)) then writeln('{D8203C32-E1E1-41E7-8D46-7F74E64F5EE8}');
    if (I.Projection(u13  ) <> M.Projection(u13  .ToMultivector)) then writeln('{76159EE7-A629-4D51-AC93-21723AD924F8}');
    if (I.Projection(u14  ) <> M.Projection(u14  .ToMultivector)) then writeln('{FB7E4073-2EA9-4E20-81E0-3188E28B12D7}');
    if (I.Projection(u23  ) <> M.Projection(u23  .ToMultivector)) then writeln('{08AB5FD9-5C9A-4955-BF3C-8828FFC0131D}');
    if (I.Projection(u24  ) <> M.Projection(u24  .ToMultivector)) then writeln('{5BCAC996-75BA-459E-91E8-0896FF1C2700}');
    if (I.Projection(u34  ) <> M.Projection(u23  .ToMultivector)) then writeln('{BBA671BD-FB3E-4991-82AC-8E340F26E759}');
    if (I.Projection(u123 ) <> M.Projection(u123 .ToMultivector)) then writeln('{E2CB7EDC-BCF1-450F-BC99-6FDA0BC52F16}');
    if (I.Projection(u124 ) <> M.Projection(u124 .ToMultivector)) then writeln('{3C22D9EB-8C6F-4F2E-9DD1-C46A1E4C407C}');
    if (I.Projection(u134 ) <> M.Projection(u134 .ToMultivector)) then writeln('{3E905ADD-A421-4E56-ADBF-B2618D646139}');
    if (I.Projection(u234 ) <> M.Projection(u234 .ToMultivector)) then writeln('{67437867-5C77-4D94-B3D0-F84A6282AA78}');
    if (I.Projection(u1234) <> M.Projection(u1234.ToMultivector)) then writeln('{8A066EAF-919D-4BF4-952D-0C109147E3F8}');

    if (I.Rejection (u1   ) <> M.Rejection (u1   .ToMultivector)) then writeln('{6BB49629-91B4-4F7E-990A-7F24090AD670}');
    if (I.Rejection (u2   ) <> M.Rejection (u2   .ToMultivector)) then writeln('{EDD6F752-F712-4FBE-A3F2-88EADD6CB653}');
    if (I.Rejection (u3   ) <> M.Rejection (u3   .ToMultivector)) then writeln('{F2737863-21F0-4F36-97B2-736DA2ABF3FF}');
    if (I.Rejection (u4   ) <> M.Rejection (u4   .ToMultivector)) then writeln('{059693EB-8DE9-4C44-AA2C-6F9452CF6158}');
    if (I.Rejection (u12  ) <> M.Rejection (u12  .ToMultivector)) then writeln('{F8A05735-7DBD-4CD3-9CB3-1EA5256900D4}');
    if (I.Rejection (u13  ) <> M.Rejection (u13  .ToMultivector)) then writeln('{E694EC87-7835-46F8-8872-855B20E734C1}');
    if (I.Rejection (u14  ) <> M.Rejection (u14  .ToMultivector)) then writeln('{BE69C1DA-8832-4128-BEA4-214BB63C563F}');
    if (I.Rejection (u23  ) <> M.Rejection (u23  .ToMultivector)) then writeln('{A92A8FA5-CAD1-462A-8913-C6468E862722}');
    if (I.Rejection (u24  ) <> M.Rejection (u24  .ToMultivector)) then writeln('{16EF09CB-618E-4009-AF68-8159FE76CE37}');
    if (I.Rejection (u34  ) <> M.Rejection (u34  .ToMultivector)) then writeln('{7B511843-4C8A-4EB9-A75A-477CE48B8465}');
    if (I.Rejection (u123 ) <> M.Rejection (u123 .ToMultivector)) then writeln('{BA523DD3-6CAE-434D-B014-B9237FF4022F}');
    if (I.Rejection (u124 ) <> M.Rejection (u124 .ToMultivector)) then writeln('{443068A3-C88E-4E13-9C1E-ABD384838C0B}');
    if (I.Rejection (u134 ) <> M.Rejection (u134 .ToMultivector)) then writeln('{AED9B47C-9786-4C74-B1C4-8C53BC058FB6}');
    if (I.Rejection (u234 ) <> M.Rejection (u234 .ToMultivector)) then writeln('{17CDD333-804F-4635-A349-C81C0F366D35}');
    if (I.Rejection (u1234) <> M.Rejection (u1234.ToMultivector)) then writeln('{6D1885FB-554C-4252-8D50-14D272963113}');

    if (I.Reflection(u1  )  <> M.Reflection(u1   .ToMultivector)) then writeln('{025C752B-84A4-41A6-A0AE-5402CAA641FC}');
    if (I.Reflection(u2  )  <> M.Reflection(u2   .ToMultivector)) then writeln('{B6A501BA-4C70-4443-AFF9-4F6203EC0DFB}');
    if (I.Reflection(u3  )  <> M.Reflection(u3   .ToMultivector)) then writeln('{926F2359-FDC6-4144-BE21-BA8421500F35}');
    if (I.Reflection(u4  )  <> M.Reflection(u4   .ToMultivector)) then writeln('{0CDB8D24-6DE1-4B3B-B061-FFA31AB67D35}');
    if (I.Reflection(u12 )  <> M.Reflection(u12  .ToMultivector)) then writeln('{8E9BF3CB-3663-4125-A4C6-D89021FF9931}');
    if (I.Reflection(u13 )  <> M.Reflection(u13  .ToMultivector)) then writeln('{FC40F6F9-9E9D-42FB-BB56-51278DAEC789}');
    if (I.Reflection(u14 )  <> M.Reflection(u14  .ToMultivector)) then writeln('{62EE2D3B-C997-4C2B-ACB5-99D93B362858}');
    if (I.Reflection(u23 )  <> M.Reflection(u23  .ToMultivector)) then writeln('{1D20556F-2C10-4513-AFB6-52A6898598B7}');
    if (I.Reflection(u24 )  <> M.Reflection(u24  .ToMultivector)) then writeln('{4D8B0B89-A9C7-44CD-BCC9-70C78CB4D0D0}');
    if (I.Reflection(u34 )  <> M.Reflection(u34  .ToMultivector)) then writeln('{A5292DDA-B717-4588-8E12-934AA56AB727}');
    if (I.Reflection(u123 ) <> M.Reflection(u123 .ToMultivector)) then writeln('{4AE9BE01-156D-4EF9-A451-7D124FC4EEE3}');
    if (I.Reflection(u124 ) <> M.Reflection(u124 .ToMultivector)) then writeln('{3C4F8160-79B7-411E-A908-3C3966CE119A}');
    if (I.Reflection(u134 ) <> M.Reflection(u134 .ToMultivector)) then writeln('{B49D519D-901F-481D-8386-454E2193515C}');
    if (I.Reflection(u234 ) <> M.Reflection(u234 .ToMultivector)) then writeln('{ED3825F8-86CF-4A2E-9559-2A6124A11007}');
    if (I.Reflection(u1234) <> M.Reflection(u1234.ToMultivector)) then writeln('{8CE17C4F-46B2-46DD-8D5D-23C7AC1A3B0E}');

    if (I.Rotation(u1 ,  u2  ) <> M.Rotation(u1  .ToMultivector, u2  .ToMultivector)) then writeln('{3735A295-8BEB-4704-8613-F9209C184740}');
    if (I.Rotation(u2 ,  u3  ) <> M.Rotation(u2  .ToMultivector, u3  .ToMultivector)) then writeln('{8624C999-7B39-4471-AD3D-970C559A0D17}');
    if (I.Rotation(u3 ,  u4  ) <> M.Rotation(u3  .ToMultivector, u4  .ToMultivector)) then writeln('{8FC4EC3A-69B9-48DB-AAA2-63CE4DCB3D03}');
    if (I.Rotation(u4 ,  u1  ) <> M.Rotation(u4  .ToMultivector, u1  .ToMultivector)) then writeln('{D5313237-BA69-4168-8D26-1C35115853AC}');
    if (I.Rotation(u12,  u13 ) <> M.Rotation(u12 .ToMultivector, u13 .ToMultivector)) then writeln('{6080625C-F145-401A-834D-9C931FD0BA4A}');
    if (I.Rotation(u13,  u14 ) <> M.Rotation(u13 .ToMultivector, u14 .ToMultivector)) then writeln('{27ADD4F4-AADB-45B1-B5FE-B55CE1D2DEB5}');
    if (I.Rotation(u14,  u23 ) <> M.Rotation(u14 .ToMultivector, u23 .ToMultivector)) then writeln('{6010AC7B-E41A-425D-867D-45FDCB87CBAA}');
    if (I.Rotation(u23,  u24 ) <> M.Rotation(u23 .ToMultivector, u24 .ToMultivector)) then writeln('{5010E2A1-CC27-4B08-A760-641C57AC9F65}');
    if (I.Rotation(u24,  u34 ) <> M.Rotation(u24 .ToMultivector, u34 .ToMultivector)) then writeln('{4D7CB254-9C11-402E-ACA2-3FC522F0EE37}');
    if (I.Rotation(u34,  u12 ) <> M.Rotation(u34 .ToMultivector, u12 .ToMultivector)) then writeln('{1D1FBDA4-2B15-49D4-9408-5BE1BF8A41CB}');
    if (I.Rotation(u123, u124) <> M.Rotation(u123.ToMultivector, u124.ToMultivector)) then writeln('{4A0B5CBA-C523-4C48-9975-57E9BA81ED66}');
    if (I.Rotation(u124, u134) <> M.Rotation(u124.ToMultivector, u134.ToMultivector)) then writeln('{BC7B153C-88E6-41E9-9732-482B233B1886}');
    if (I.Rotation(u134, u234) <> M.Rotation(u134.ToMultivector, u234.ToMultivector)) then writeln('{C4DE5220-E877-414D-BA84-5C9F18D79C7F}');
    if (I.Rotation(u234, u123) <> M.Rotation(u234.ToMultivector, u123.ToMultivector)) then writeln('{72886529-B72A-4897-8A31-82F6C6E16E3C}');

    // TBivector
    M  := B.ToMultivector;
    if B.Dot          (B) <> M.Dot                (M) then writeln('{D45E2B14-F879-42C2-AFA8-E90454F2D2A8}');
    if B.Dot          (M) <> M.Dot                (B) then writeln('{DD129D94-2631-42B6-91AA-05F000687528}');
    if B.Wedge        (B) <> M.Wedge              (M) then writeln('{F7A31C24-3D6E-4EEC-BFAA-FFB1C8B7C4D4}');
    if B.Wedge        (M) <> M.Wedge              (B) then writeln('{DE383E41-70E6-4301-8D2E-EC3646FE4EA0}');
    if (B*M)              <> (M*B)                    then writeln('{F4A706FC-C50A-4511-9AB2-FCB1D7D24A94}');
    if (B*B)              <> (M*M)                    then writeln('{4F788337-3640-41A1-BEB8-E6FDB83B0624}');
    if not B.Reciprocal.SameValue(M.Reciprocal)       then writeln('{9A0BE928-E294-4C87-875C-9FD0B37DB8EA}');
    if B.Conjugate        <> M.Conjugate              then writeln('{D2788F82-6B59-40E4-AF91-E7CDBB8FBDA2}');
    if B.Inverse          <> M.Inverse                then writeln('{34596514-593F-4D65-845D-BD2DC4F4FDF9}');
    if B.Dual             <> M.Dual                   then writeln('{63E4E07A-7624-45A0-9B3E-F307B7B18462}');
    if B.Norm             <> M.ExtractBivector.Norm   then writeln('{083E1584-1BDF-427E-A726-D2FB0FD0C017}');
    if B.SquaredNorm      <> M.SquaredNorm            then writeln('{F888657C-0A10-458C-82C0-8D4B8576A676}');
    if B.Reverse          <> M.Reverse                then writeln('{0B87CC6F-F462-414C-9E51-0928F06CFBD8}');
    if not (B/B).SameValue(1)                         then writeln('{DAB16BC6-E508-486D-B002-8EBE6AA119F7}');

    if (B.Projection(u1   ) <> M.Projection(u1   .ToMultivector)) then writeln('{E1E0AE2F-DC55-4E59-9448-756726B28C63}');
    if (B.Projection(u2   ) <> M.Projection(u2   .ToMultivector)) then writeln('{CB0B46FA-EA21-4CF7-A56C-D07EB203F421}');
    if (B.Projection(u3   ) <> M.Projection(u3   .ToMultivector)) then writeln('{FB7EB327-F46A-4EB6-91E6-40455A5AA297}');
    if (B.Projection(u4   ) <> M.Projection(u4   .ToMultivector)) then writeln('{03B90FF1-787E-4531-8097-ABBE7235D754}');
    if (B.Projection(u12  ) <> M.Projection(u12  .ToMultivector)) then writeln('{44FAB188-EC83-4844-BF5B-9C2841030711}');
    if (B.Projection(u13  ) <> M.Projection(u13  .ToMultivector)) then writeln('{B0AD8E05-C7C5-46A0-A21C-CD8E38ED7322}');
    if (B.Projection(u14  ) <> M.Projection(u14  .ToMultivector)) then writeln('{6098AABD-DF30-4C39-BAEE-B629591EC240}');
    if (B.Projection(u23  ) <> M.Projection(u23  .ToMultivector)) then writeln('{859319CC-E329-440B-8708-E0BB85694204}');
    if (B.Projection(u24  ) <> M.Projection(u24  .ToMultivector)) then writeln('{23BB2AEA-9888-4E8B-AD90-FD3EC146487D}');
    if (B.Projection(u34  ) <> M.Projection(u23  .ToMultivector)) then writeln('{744E2DEF-A3BA-45F2-866E-61F3E4BB6F7A}');
    if (B.Projection(u123 ) <> M.Projection(u123 .ToMultivector)) then writeln('{E5952240-F23A-42C8-903D-CE8EF353CBD1}');
    if (B.Projection(u124 ) <> M.Projection(u124 .ToMultivector)) then writeln('{07450FB9-399F-48AC-B2C4-243EACD4FD47}');
    if (B.Projection(u134 ) <> M.Projection(u134 .ToMultivector)) then writeln('{02F0A5D3-0F98-466C-BFE2-8C194BDF2500}');
    if (B.Projection(u234 ) <> M.Projection(u234 .ToMultivector)) then writeln('{35FD6A15-6A16-4E0A-8C06-EC10525DDB38}');
    if (B.Projection(u1234) <> M.Projection(u1234.ToMultivector)) then writeln('{42B61156-FE37-440A-802F-D16D0CC7FCCC}');

    if (B.Rejection (u1   ) <> M.Rejection (u1   .ToMultivector)) then writeln('{2650CAF6-2A54-4148-99E0-A7671FE6CCCF}');
    if (B.Rejection (u2   ) <> M.Rejection (u2   .ToMultivector)) then writeln('{B9191F79-7BBE-4CA7-A389-B8ABC6632E86}');
    if (B.Rejection (u3   ) <> M.Rejection (u3   .ToMultivector)) then writeln('{5486FA62-0A06-4BED-882A-33C4B407491D}');
    if (B.Rejection (u4   ) <> M.Rejection (u4   .ToMultivector)) then writeln('{743F3636-FE06-4EF4-A764-3D13ED36BF87}');
    if (B.Rejection (u12  ) <> M.Rejection (u12  .ToMultivector)) then writeln('{2D724820-B18A-441E-BB9E-E8FA078EC537}');
    if (B.Rejection (u13  ) <> M.Rejection (u13  .ToMultivector)) then writeln('{F6785326-6577-47DD-9809-A00A28C6B509}');
    if (B.Rejection (u14  ) <> M.Rejection (u14  .ToMultivector)) then writeln('{349A02C2-3D71-4883-9A32-53F9AF636584}');
    if (B.Rejection (u23  ) <> M.Rejection (u23  .ToMultivector)) then writeln('{1AF3A29E-D338-47D7-B098-D735723356F7}');
    if (B.Rejection (u24  ) <> M.Rejection (u24  .ToMultivector)) then writeln('{639499D6-2CFE-48A4-B04F-D050A56D67E6}');
    if (B.Rejection (u34  ) <> M.Rejection (u34  .ToMultivector)) then writeln('{F18EF887-EE0B-4FEA-B151-F14759D3E459}');
    if (B.Rejection (u123 ) <> M.Rejection (u123 .ToMultivector)) then writeln('{C57C943D-4134-43EC-8349-C7F0E4529922}');
    if (B.Rejection (u124 ) <> M.Rejection (u124 .ToMultivector)) then writeln('{9DA41B32-69C5-48F3-A408-62599FE17E2F}');
    if (B.Rejection (u134 ) <> M.Rejection (u134 .ToMultivector)) then writeln('{7CCBBE55-15B7-46C6-90AE-2C8F8EBE90AA}');
    if (B.Rejection (u234 ) <> M.Rejection (u234 .ToMultivector)) then writeln('{DAA5F58F-99F7-4A40-AF87-90A33EDBA26A}');
    if (B.Rejection (u1234) <> M.Rejection (u1234.ToMultivector)) then writeln('{7FE0630A-A1AE-4110-A4D3-83C687FB754B}');

    if (B.Reflection(u1  )  <> M.Reflection(u1   .ToMultivector)) then writeln('{A4D31BD3-5F08-45A7-876E-ADF63A505D87}');
    if (B.Reflection(u2  )  <> M.Reflection(u2   .ToMultivector)) then writeln('{C4819128-91D2-4AD8-9A2C-BA0B80F336CD}');
    if (B.Reflection(u3  )  <> M.Reflection(u3   .ToMultivector)) then writeln('{E16C89B6-E5C6-480F-AFD3-9AD25F5C3521}');
    if (B.Reflection(u4  )  <> M.Reflection(u4   .ToMultivector)) then writeln('{4E1E9206-FC7E-4CD1-A4E9-82323D25E754}');
    if (B.Reflection(u12 )  <> M.Reflection(u12  .ToMultivector)) then writeln('{1B19C6E0-644E-48E1-8583-274EBB6CBF72}');
    if (B.Reflection(u13 )  <> M.Reflection(u13  .ToMultivector)) then writeln('{2A210C6C-A516-47CE-92AB-D824EF18FC73}');
    if (B.Reflection(u14 )  <> M.Reflection(u14  .ToMultivector)) then writeln('{107394DC-23C5-4489-94F7-2D63386B811C}');
    if (B.Reflection(u23 )  <> M.Reflection(u23  .ToMultivector)) then writeln('{468D67B3-8786-4FAA-9DC3-D097383EC360}');
    if (B.Reflection(u24 )  <> M.Reflection(u24  .ToMultivector)) then writeln('{2AB0D5D2-E6C4-499F-B209-3A1EEBAF44DF}');
    if (B.Reflection(u34 )  <> M.Reflection(u34  .ToMultivector)) then writeln('{5636DD4D-3C48-4AAC-A182-329240422CDC}');
    if (B.Reflection(u123 ) <> M.Reflection(u123 .ToMultivector)) then writeln('{60B18CE1-D69B-45A2-8C85-BB28C5D4A845}');
    if (B.Reflection(u124 ) <> M.Reflection(u124 .ToMultivector)) then writeln('{78505DA4-0B33-4B72-8D2C-84CAD8F84011}');
    if (B.Reflection(u134 ) <> M.Reflection(u134 .ToMultivector)) then writeln('{62825226-908E-4369-886B-8AD60338EF0F}');
    if (B.Reflection(u234 ) <> M.Reflection(u234 .ToMultivector)) then writeln('{340E3D44-A225-43A7-A672-2377A10E74CC}');
    if (B.Reflection(u1234) <> M.Reflection(u1234.ToMultivector)) then writeln('{CDD30368-0343-4E2E-B683-118A9FCBFBD3}');

    if (B.Rotation(u1 ,  u2  ) <> M.Rotation(u1  .ToMultivector, u2  .ToMultivector)) then writeln('{CE7E80D8-029A-4D5E-A7EA-7DD285D9196B}');
    if (B.Rotation(u2 ,  u3  ) <> M.Rotation(u2  .ToMultivector, u3  .ToMultivector)) then writeln('{701AB6E1-DC8B-40E9-9C5B-A8169EDABC24}');
    if (B.Rotation(u3 ,  u4  ) <> M.Rotation(u3  .ToMultivector, u4  .ToMultivector)) then writeln('{9D5EE514-DE11-475F-9E97-D89F4F20A0DA}');
    if (B.Rotation(u4 ,  u1  ) <> M.Rotation(u4  .ToMultivector, u1  .ToMultivector)) then writeln('{B4F06876-5F89-4C59-B6CB-E99E049B506E}');
    if (B.Rotation(u12,  u13 ) <> M.Rotation(u12 .ToMultivector, u13 .ToMultivector)) then writeln('{75FBBE93-C2F8-45AB-A0AB-D6C4AD8CA65B}');
    if (B.Rotation(u13,  u14 ) <> M.Rotation(u13 .ToMultivector, u14 .ToMultivector)) then writeln('{0AF5DFE2-8A86-4C45-8329-C8F43D8E563F}');
    if (B.Rotation(u14,  u23 ) <> M.Rotation(u14 .ToMultivector, u23 .ToMultivector)) then writeln('{5B8905CE-F920-42CD-A8A6-7651B813E2F8}');
    if (B.Rotation(u23,  u24 ) <> M.Rotation(u23 .ToMultivector, u24 .ToMultivector)) then writeln('{6D7BC644-B45A-4F1F-B960-B03544A417A9}');
    if (B.Rotation(u24,  u34 ) <> M.Rotation(u24 .ToMultivector, u34 .ToMultivector)) then writeln('{378CED56-1641-4206-873B-1085B52121F3}');
    if (B.Rotation(u34,  u12 ) <> M.Rotation(u34 .ToMultivector, u12 .ToMultivector)) then writeln('{C7F78A77-5308-4750-B4CA-396B3595D9FA}');
    if (B.Rotation(u123, u124) <> M.Rotation(u123.ToMultivector, u124.ToMultivector)) then writeln('{83B0D302-44E0-42E5-8677-4D297EA90593}');
    if (B.Rotation(u124, u134) <> M.Rotation(u124.ToMultivector, u134.ToMultivector)) then writeln('{B842FCCF-3B8E-403A-AED4-8EF21BF576CA}');
    if (B.Rotation(u134, u234) <> M.Rotation(u134.ToMultivector, u234.ToMultivector)) then writeln('{1AD33E46-958D-4701-8B6A-6DC0EA3FC660}');
    if (B.Rotation(u234, u123) <> M.Rotation(u234.ToMultivector, u123.ToMultivector)) then writeln('{E881ABB9-83C5-48C9-BEE5-31D56E7515FF}');

    // TVector
    M  := v.ToMultivector;
    if v.Dot           (v) <> M.Dot            (M) then writeln('{EB471FD8-EDD5-4E14-8E57-B58325255920}');
    if v.Dot           (M) <> M.Dot            (v) then writeln('{CA264FCC-0895-452B-BB0C-50E2B4227A24}');
    if v.Wedge         (v) <> M.Wedge          (M) then writeln('{95D137BD-819C-41BE-9341-35447805F7EC}');
    if v.Wedge         (M) <> M.Wedge          (v) then writeln('{C9305B42-2A5B-4F1A-84AC-6559A9C9C505}');
    if (v*M)               <> (M*v)                then writeln('{59945087-5C44-4F67-A77A-10B5359CAC0B}');
    if (v*v)               <> (M*M)                then writeln('{96CDEDF8-10E8-43CD-8989-369447DB3196}');
    if not v.Reciprocal.SameValue(M.Reciprocal)    then writeln('{AABD637E-DA0C-4221-8979-890C53CA4373}');
    if v.Conjugate         <> M.Conjugate          then writeln('{50CF4051-4039-4E2C-919F-8465233F95F7}');
    if v.Inverse           <> M.Inverse            then writeln('{82B46198-C259-4AD3-8694-A4DD3D2A1C32}');
    if v.Dual              <> M.Dual               then writeln('{ACA95D2E-4A5C-43E3-9707-89A564C054B2}');
    if v.Norm              <> M.ExtractVector.Norm then writeln('{AA082340-8287-4830-8317-EFD5CDD38DC3}');
    if v.SquaredNorm       <> M.SquaredNorm        then writeln('{4BD36AA5-A7CE-49ED-83C6-E30BA7CEA987}');
    if v.Reverse           <> M.Reverse            then writeln('{E7236FD6-C121-4E94-BCE5-A03E5ACB2FEB}');
    if not (v/v).SameValue(1)                      then writeln('{A95822D7-9E52-4F1F-804D-1817336BACF8}');

    if (v.Projection(u1   ) <> M.Projection(u1   .ToMultivector)) then writeln('{4593CF8A-D4DF-4A71-B578-0BDBD8441ED7}');
    if (v.Projection(u2   ) <> M.Projection(u2   .ToMultivector)) then writeln('{2BFA77A0-5B99-459A-A355-D4913D8011D4}');
    if (v.Projection(u3   ) <> M.Projection(u3   .ToMultivector)) then writeln('{C8CE2A95-AD4F-4EAE-B0B4-50555C518740}');
    if (v.Projection(u4   ) <> M.Projection(u4   .ToMultivector)) then writeln('{5C1692E6-C857-4622-BE21-82D9A0D5FD0F}');
    if (v.Projection(u12  ) <> M.Projection(u12  .ToMultivector)) then writeln('{FDEC0D82-AEEB-48F4-83F8-DDE864D1DDF5}');
    if (v.Projection(u13  ) <> M.Projection(u13  .ToMultivector)) then writeln('{52292E36-B1B4-4C54-86A9-588730EFB19C}');
    if (v.Projection(u14  ) <> M.Projection(u14  .ToMultivector)) then writeln('{CB914FB4-C358-4089-B989-7558F082C800}');
    if (v.Projection(u23  ) <> M.Projection(u23  .ToMultivector)) then writeln('{C35442A1-48DF-4949-B496-76ED633EF210}');
    if (v.Projection(u24  ) <> M.Projection(u24  .ToMultivector)) then writeln('{84C0D930-D02C-4DF4-AEA1-43C121C82491}');
    if (v.Projection(u34  ) <> M.Projection(u23  .ToMultivector)) then writeln('{C9EC1B28-1C0B-4DD5-B2E6-63912B1CBB14}');
    if (v.Projection(u123 ) <> M.Projection(u123 .ToMultivector)) then writeln('{7200053D-8A56-4205-92E7-8FFB2C1A6B24}');
    if (v.Projection(u124 ) <> M.Projection(u124 .ToMultivector)) then writeln('{E4B51086-7B11-4F98-834E-C6F2714E82D5}');
    if (v.Projection(u134 ) <> M.Projection(u134 .ToMultivector)) then writeln('{C949ECAD-99DB-4FEE-9377-9F51D29B1117}');
    if (v.Projection(u234 ) <> M.Projection(u234 .ToMultivector)) then writeln('{89F2FEF0-9BD6-4253-9DE8-618BE951AF3A}');
    if (v.Projection(u1234) <> M.Projection(u1234.ToMultivector)) then writeln('{5673BDE5-A747-4835-AE18-CE7F7FA2FA49}');

    if (v.Rejection (u1   ) <> M.Rejection (u1   .ToMultivector)) then writeln('{03BE0581-15A4-46C3-A422-C16C85DFB19B}');
    if (v.Rejection (u2   ) <> M.Rejection (u2   .ToMultivector)) then writeln('{5963CEFF-9684-4247-B8FC-9A57F412B52E}');
    if (v.Rejection (u3   ) <> M.Rejection (u3   .ToMultivector)) then writeln('{C0F2D848-055F-44C3-AA05-6362EFC97F88}');
    if (v.Rejection (u4   ) <> M.Rejection (u4   .ToMultivector)) then writeln('{7AE3547A-2301-4FC3-BB08-932EDE2C6DC3}');
    if (v.Rejection (u12  ) <> M.Rejection (u12  .ToMultivector)) then writeln('{111F6899-D7F3-4DD2-B596-EABC4033912B}');
    if (v.Rejection (u13  ) <> M.Rejection (u13  .ToMultivector)) then writeln('{130817DC-FF98-4908-ADAC-DC93DD71D6F3}');
    if (v.Rejection (u14  ) <> M.Rejection (u14  .ToMultivector)) then writeln('{06B7234D-9484-45B2-84AA-7D626EE8D875}');
    if (v.Rejection (u23  ) <> M.Rejection (u23  .ToMultivector)) then writeln('{256F2693-2860-48C9-B7EF-05EF7541D7ED}');
    if (v.Rejection (u24  ) <> M.Rejection (u24  .ToMultivector)) then writeln('{D0E399EF-34ED-4B49-A776-CDEE40BF193A}');
    if (v.Rejection (u34  ) <> M.Rejection (u34  .ToMultivector)) then writeln('{83C54598-0678-4EA7-A512-A809F3A460A9}');
    if (v.Rejection (u123 ) <> M.Rejection (u123 .ToMultivector)) then writeln('{EDB5B08C-C55A-4F38-B076-91CD56DDBFE5}');
    if (v.Rejection (u124 ) <> M.Rejection (u124 .ToMultivector)) then writeln('{6C19C0EB-5B0B-4DCD-B2E5-39EB8F1FA117}');
    if (v.Rejection (u134 ) <> M.Rejection (u134 .ToMultivector)) then writeln('{62AE4DA3-1C32-42FB-BAC5-B7D16E227B45}');
    if (v.Rejection (u234 ) <> M.Rejection (u234 .ToMultivector)) then writeln('{CC62CF3C-A25D-45C9-A5D7-DCEEB7058285}');
    if (v.Rejection (u1234) <> M.Rejection (u1234.ToMultivector)) then writeln('{C4EA5839-BB0A-4104-8F99-EC0B19C86045}');

    if (v.Reflection(u1  )  <> M.Reflection(u1   .ToMultivector)) then writeln('{A329E4A8-7D49-4C5A-91A0-0E0B752A7772}');
    if (v.Reflection(u2  )  <> M.Reflection(u2   .ToMultivector)) then writeln('{C0CCFA14-9BCC-4239-BC33-B70B40D6A383}');
    if (v.Reflection(u3  )  <> M.Reflection(u3   .ToMultivector)) then writeln('{CA5EC8DD-CED8-4619-9346-EDE4F3DCED99}');
    if (v.Reflection(u4  )  <> M.Reflection(u4   .ToMultivector)) then writeln('{F3521D92-9792-4613-8931-B7FA1F98E4FA}');
    if (v.Reflection(u12 )  <> M.Reflection(u12  .ToMultivector)) then writeln('{AFDD2C63-93B1-44A1-80B2-B731DCD4AED0}');
    if (v.Reflection(u13 )  <> M.Reflection(u13  .ToMultivector)) then writeln('{A19EC181-6875-4D02-AC4C-90A942410BD9}');
    if (v.Reflection(u14 )  <> M.Reflection(u14  .ToMultivector)) then writeln('{BEF8CB0B-E537-4322-8F5D-A84224D0ACBD}');
    if (v.Reflection(u23 )  <> M.Reflection(u23  .ToMultivector)) then writeln('{2E14E5ED-7035-4CDB-B384-67B228BF7D9C}');
    if (v.Reflection(u24 )  <> M.Reflection(u24  .ToMultivector)) then writeln('{B2DF5B00-5B4D-491C-8877-7008DAFD68FE}');
    if (v.Reflection(u34 )  <> M.Reflection(u34  .ToMultivector)) then writeln('{EE78DAF5-F982-4B0C-88B3-8DBBFAFE052B}');
    if (v.Reflection(u123 ) <> M.Reflection(u123 .ToMultivector)) then writeln('{B75AD308-15DF-4517-B544-51E3B0894C41}');
    if (v.Reflection(u124 ) <> M.Reflection(u124 .ToMultivector)) then writeln('{6142E74C-A74E-4DE9-A0D8-78942F3FE7A1}');
    if (v.Reflection(u134 ) <> M.Reflection(u134 .ToMultivector)) then writeln('{95F9F170-E401-4F1A-AD47-9518599E6F7F}');
    if (v.Reflection(u234 ) <> M.Reflection(u234 .ToMultivector)) then writeln('{B66FA123-0DC0-4C7C-A681-1DC9C2B332D9}');
    if (v.Reflection(u1234) <> M.Reflection(u1234.ToMultivector)) then writeln('{A8687BDB-026A-4B3E-9CD1-BCF39D04A570}');

    if (v.Rotation(u1 ,  u2  ) <> M.Rotation(u1  .ToMultivector, u2  .ToMultivector)) then writeln('{7BD6DB42-2B1C-468B-8518-ADB99B358ABD}');
    if (v.Rotation(u2 ,  u3  ) <> M.Rotation(u2  .ToMultivector, u3  .ToMultivector)) then writeln('{1ED58C81-DDD1-4F02-B39D-B8E39A58F946}');
    if (v.Rotation(u3 ,  u4  ) <> M.Rotation(u3  .ToMultivector, u4  .ToMultivector)) then writeln('{DBDC6E3D-4EF7-4BB4-8E19-FDAC142A67C8}');
    if (v.Rotation(u4 ,  u1  ) <> M.Rotation(u4  .ToMultivector, u1  .ToMultivector)) then writeln('{24A7E11D-8EBB-42A6-BF14-76B0F0FEA6C5}');
    if (v.Rotation(u12,  u13 ) <> M.Rotation(u12 .ToMultivector, u13 .ToMultivector)) then writeln('{012055D2-367F-4BA5-B01C-4228F69C576E}');
    if (v.Rotation(u13,  u14 ) <> M.Rotation(u13 .ToMultivector, u14 .ToMultivector)) then writeln('{2355CF4E-AD59-458D-9471-C7AC686C5669}');
    if (v.Rotation(u14,  u23 ) <> M.Rotation(u14 .ToMultivector, u23 .ToMultivector)) then writeln('{810BB3F8-2D9A-4E67-8B59-5FB6241C443A}');
    if (v.Rotation(u23,  u24 ) <> M.Rotation(u23 .ToMultivector, u24 .ToMultivector)) then writeln('{D77232C2-2C7F-4911-B572-475C58139D8E}');
    if (v.Rotation(u24,  u34 ) <> M.Rotation(u24 .ToMultivector, u34 .ToMultivector)) then writeln('{F9DC2091-65F1-44A4-A71B-6E464689D471}');
    if (v.Rotation(u34,  u12 ) <> M.Rotation(u34 .ToMultivector, u12 .ToMultivector)) then writeln('{1E502CFB-76CD-4720-946F-9F20C9710A02}');
    if (v.Rotation(u123, u124) <> M.Rotation(u123.ToMultivector, u124.ToMultivector)) then writeln('{1F8A4E29-BFC7-48FF-99C3-01D9AC3D6CBA}');
    if (v.Rotation(u124, u134) <> M.Rotation(u124.ToMultivector, u134.ToMultivector)) then writeln('{F2BCDC58-D378-49FF-8821-5DB22A20AD0E}');
    if (v.Rotation(u134, u234) <> M.Rotation(u134.ToMultivector, u234.ToMultivector)) then writeln('{BCB89AE5-DEEF-4A34-AA28-5BDC681DAA0E}');
    if (v.Rotation(u234, u123) <> M.Rotation(u234.ToMultivector, u123.ToMultivector)) then writeln('{6299E035-CFA2-4CB5-9EC5-8B4B4DB3A5FA}');
  end;

  writeln('CL13 TEST: end.');

  v1 := Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4;
  v2 := Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4;
  v3 := Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4;

  B1 := Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e24 + Rnd*e34;
  B2 := Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e24 + Rnd*e34;
  B3 := Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e24 + Rnd*e34;

  I1 := Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234;
  I2 := Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234;
  I3 := Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234;

  Q1 := Rnd*e1234;
  Q2 := Rnd*e1234;
  Q3 := Rnd*e1234;

  M1 := Rnd + Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4 + Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e34 + Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234 + Rnd*e1234;
  M2 := Rnd + Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4 + Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e34 + Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234 + Rnd*e1234;
  M3 := Rnd + Rnd*e1 + Rnd*e2 + Rnd*e3 + Rnd*e4 + Rnd*e12 + Rnd*e13 + Rnd*e14 + Rnd*e23 + Rnd*e34 + Rnd*e123 + Rnd*e124 + Rnd*e134 + Rnd*e234 + Rnd*e1234;

  writeln;
  writeln(Format('v1 = %s (Norm = %s)', [v1.ToString, v1.Norm.ToString]));
  writeln(Format('v2 = %s (Norm = %s)', [v2.ToString, v2.Norm.ToString]));
  writeln(Format('v3 = %s (Norm = %s)', [v3.ToString, v3.Norm.ToString]));
  writeln(Format('v1/v1 = %s', [(v1/v1).ToString]));
  writeln(Format('v2/v2 = %s', [(v2/v2).ToString]));
  writeln(Format('v3/v3 = %s', [(v3/v3).ToString]));

  writeln(Format('B1 = %s (Norm = %s)', [B1.ToString, B1.Norm.ToString]));
  writeln(Format('B2 = %s (Norm = %s)', [B2.ToString, B2.Norm.ToString]));
  writeln(Format('B3 = %s (Norm = %s)', [B3.ToString, B3.Norm.ToString]));
  writeln(Format('B1/B1 = %s', [(B1/B1).ToString]));
  writeln(Format('B2/B2 = %s', [(B2/B2).ToString]));
  writeln(Format('B3/B3 = %s', [(B3/B3).ToString]));
  writeln(Format('B3.Normalized      = %s', [(B3.Normalized     ).ToString]));
  writeln(Format('B3.Normalized.Norm = %s', [(B3.Normalized.Norm).ToString]));

  writeln(Format('I1 = %s (Norm = %s)', [I1.ToString, I1.Norm.ToString]));
  writeln(Format('I2 = %s (Norm = %s)', [I2.ToString, I2.Norm.ToString]));
  writeln(Format('I3 = %s (Norm = %s)', [I3.ToString, I2.Norm.ToString]));
  writeln(Format('I1/I1 = %s', [(I1/I1).ToString]));
  writeln(Format('I2/I2 = %s', [(I2/I2).ToString]));
  writeln(Format('I3/I3 = %s', [(I3/I3).ToString]));

  writeln(Format('Q1 = %s (Norm = %s)', [Q1.ToString, Q1.Norm.ToString]));
  writeln(Format('Q2 = %s (Norm = %s)', [Q2.ToString, Q2.Norm.ToString]));
  writeln(Format('Q3 = %s (Norm = %s)', [Q3.ToString, Q2.Norm.ToString]));
  writeln(Format('Q1/Q1 = %s', [(Q1/Q1).ToString]));
  writeln(Format('Q2/Q2 = %s', [(Q2/Q2).ToString]));
  writeln(Format('Q3/Q3 = %s', [(Q3/Q3).ToString]));

  writeln(Format('M1 = %s (Norm = %s)', [M1.ToString, M1.Norm.ToString]));
  writeln(Format('M2 = %s (Norm = %s)', [M2.ToString, M2.Norm.ToString]));
  writeln(Format('M3 = %s (Norm = %s)', [M3.ToString, M3.Norm.ToString]));
  writeln(Format('M1/M1 = %s', [(M1/M1).ToString]));
  writeln(Format('M2/M2 = %s', [(M2/M2).ToString]));
  writeln(Format('M3/M3 = %s', [(M3/M3).ToString]));

  writeln(Format('1/M3 = (%s)', [(M3.Reciprocal            ).ToString]));
  writeln(Format('1/M3 = (%s)', [(M3.Reverse/M3.SquaredNorm).ToString]));
  writeln(Format('M.Normalized      = %s', [(M3.Normalized     ).ToString]));
  writeln(Format('M.Normalized.Norm = %s', [(M3.Normalized.Norm).ToString]));

  writeln;
  writeln('TVECTOR');
  writeln('Dot       : vector &       vector  : ',  v1.ToMultivector.Dot(v2.ToMultivector).IsA);
  writeln('Dot       : vector &     bivector  : ',  v1.ToMultivector.Dot(B2.ToMultivector).IsA);
  writeln('Dot       : vector &    trivector  : ',  v1.ToMultivector.Dot(I2.ToMultivector).IsA);
  writeln('Dot       : vector & quadrivector  : ',  v1.ToMultivector.Dot(Q2.ToMultivector).IsA);
  writeln('Dot       : vector &  multivector  : ',  v1.ToMultivector.Dot(M2              ).IsA);
  writeln;
  writeln('Wedge     : vector &       vector  : ',  v1.ToMultivector.Wedge(v2.ToMultivector).IsA);
  writeln('Wedge     : vector &     bivector  : ',  v1.ToMultivector.Wedge(B2.ToMultivector).IsA);
  writeln('Wedge     : vector &    trivector  : ',  v1.ToMultivector.Wedge(I2.ToMultivector).IsA);
  writeln('Wedge     : vector & quadrivector  : ',  v1.ToMultivector.Wedge(Q2.ToMultivector).IsA);
  writeln('Wedge     : vector &  multivector  : ',  v1.ToMultivector.Wedge(M2              ).IsA);
  writeln;
  writeln('Geometric : vector &       vector  : ', (v1.ToMultivector*v2.ToMultivector).IsA);
  writeln('Geometric : vector &     bivector  : ', (v1.ToMultivector*B2.ToMultivector).IsA);
  writeln('Geometric : vector &    trivector  : ', (v1.ToMultivector*I2.ToMultivector).IsA);
  writeln('Geometric : vector & quadrivector  : ', (v1.ToMultivector*Q2.ToMultivector).IsA);
  writeln('Geometric : vector &  multivector  : ', (v1.ToMultivector*M2              ).IsA);
  writeln;
  writeln('Projection: vector &       vector  : ',  v1.ToMultivector.Projection(v2.ToMultivector).IsA);
  writeln('Projection: vector &     bivector  : ',  v1.ToMultivector.Projection(B2.ToMultivector).IsA);
  writeln('Projection: vector &    trivector  : ',  v1.ToMultivector.Projection(I2.ToMultivector).IsA);
  writeln('Projection: vector & quadrivector  : ',  v1.ToMultivector.Projection(Q2.ToMultivector).IsA);
  writeln('Projection: vector &  multivector  : ',  v1.ToMultivector.Projection(M2              ).IsA);
  writeln;
  writeln('Rejection : vector &       vector  : ',  v1.ToMultivector.Rejection(v2.ToMultivector).IsA);
  writeln('Rejection : vector &     bivector  : ',  v1.ToMultivector.Rejection(B2.ToMultivector).IsA);
  writeln('Rejection : vector &    trivector  : ',  v1.ToMultivector.Rejection(I2.ToMultivector).IsA);
  writeln('Rejection : vector & quadrivector  : ',  v1.ToMultivector.Rejection(Q2.ToMultivector).IsA);
  writeln('Rejection : vector &  multivector  : ',  v1.ToMultivector.Rejection(M2              ).IsA);
  writeln;
  writeln('Reflection: vector &       vector  : ',  v1.ToMultivector.Reflection(v2.ToMultivector).IsA);
  writeln('Reflection: vector &     bivector  : ',  v1.ToMultivector.Reflection(B2.ToMultivector).IsA);
  writeln('Reflection: vector &    trivector  : ',  v1.ToMultivector.Reflection(I2.ToMultivector).IsA);
  writeln('Reflection: vector & quadrivector  : ',  v1.ToMultivector.Reflection(Q2.ToMultivector).IsA);
  writeln('Reflection: vector &  multivector  : ',  v1.ToMultivector.Reflection(M2              ).IsA);
  writeln;
  writeln('Rotation  : vector &       vectors : ',  v1.ToMultivector.Rotation(v2.ToMultivector, v3.ToMultivector).IsA);
  writeln('Rotation  : vector &     bivectors : ',  v1.ToMultivector.Rotation(B2.ToMultivector, B3.ToMultivector).IsA);
  writeln('Rotation  : vector &    trivectors : ',  v1.ToMultivector.Rotation(I2.ToMultivector, I3.ToMultivector).IsA);
  writeln('Rotation  : vector & quadrivectors : ',  v1.ToMultivector.Rotation(Q2.ToMultivector, Q3.ToMultivector).IsA);
  writeln('Rotation  : vector &  multivectors : ',  v1.ToMultivector.Rotation(M2              , M3).IsA);

  writeln;
  writeln('TBIVECTOR');
  writeln('Dot       : bivector &       vector  : ',  B1.ToMultivector.Dot(v2.ToMultivector).IsA);
  writeln('Dot       : bivector &     bivector  : ',  B1.ToMultivector.Dot(B2.ToMultivector).IsA);
  writeln('Dot       : bivector &    trivector  : ',  B1.ToMultivector.Dot(I2.ToMultivector).IsA);
  writeln('Dot       : bivector & quadrivector  : ',  B1.ToMultivector.Dot(Q2.ToMultivector).IsA);
  writeln('Dot       : bivector &  multivector  : ',  B1.ToMultivector.Dot(M2              ).IsA);
  writeln;
  writeln('Wedge     : bivector &       vector  : ',  B1.ToMultivector.Wedge(v2.ToMultivector).IsA);
  writeln('Wedge     : bivector &     bivector  : ',  B1.ToMultivector.Wedge(B2.ToMultivector).IsA);
  writeln('Wedge     : bivector &    trivector  : ',  B1.ToMultivector.Wedge(I2.ToMultivector).IsA);
  writeln('Wedge     : bivector & quadrivector  : ',  B1.ToMultivector.Wedge(Q2.ToMultivector).IsA);
  writeln('Wedge     : bivector &  multivector  : ',  B1.ToMultivector.Wedge(M2              ).IsA);
  writeln;
  writeln('Geometric : bivector &       vector  : ', (B1.ToMultivector*v2.ToMultivector).IsA);
  writeln('Geometric : bivector &     bivector  : ', (B1.ToMultivector*B2.ToMultivector).IsA);
  writeln('Geometric : bivector &    trivector  : ', (B1.ToMultivector*I2.ToMultivector).IsA);
  writeln('Geometric : bivector & quadrivector  : ', (B1.ToMultivector*Q2.ToMultivector).IsA);
  writeln('Geometric : bivector &  multivector  : ', (B1.ToMultivector*M2              ).IsA);
  writeln;
  writeln('Projection: bivector &       vector  : ',  B1.ToMultivector.Projection(v2.ToMultivector).IsA);
  writeln('Projection: bivector &     bivector  : ',  B1.ToMultivector.Projection(B2.ToMultivector).IsA);
  writeln('Projection: bivector &    trivector  : ',  B1.ToMultivector.Projection(I2.ToMultivector).IsA);
  writeln('Projection: bivector & quadrivector  : ',  B1.ToMultivector.Projection(Q2.ToMultivector).IsA);
  writeln('Projection: bivector &  multivector  : ',  B1.ToMultivector.Projection(M2              ).IsA);
  writeln;
  writeln('Rejection : bivector &       vector  : ',  B1.ToMultivector.Rejection(v2.ToMultivector).IsA);
  writeln('Rejection : bivector &     bivector  : ',  B1.ToMultivector.Rejection(B2.ToMultivector).IsA);
  writeln('Rejection : bivector &    trivector  : ',  B1.ToMultivector.Rejection(I2.ToMultivector).IsA);
  writeln('Rejection : bivector & quadrivector  : ',  B1.ToMultivector.Rejection(Q2.ToMultivector).IsA);
  writeln('Rejection : bivector &  multivector  : ',  B1.ToMultivector.Rejection(M2              ).IsA);
  writeln;
  writeln('Reflection: bivector &       vector  : ',  B1.ToMultivector.Reflection(v2.ToMultivector).IsA);
  writeln('Reflection: bivector &     bivector  : ',  B1.ToMultivector.Reflection(B2.ToMultivector).IsA);
  writeln('Reflection: bivector &    trivector  : ',  B1.ToMultivector.Reflection(I2.ToMultivector).IsA);
  writeln('Reflection: bivector & quadrivector  : ',  B1.ToMultivector.Reflection(Q2.ToMultivector).IsA);
  writeln('Reflection: bivector &  multivector  : ',  B1.ToMultivector.Reflection(M2              ).IsA);
  writeln;
  writeln('Rotation  : bivector &       vectors : ',  B1.ToMultivector.Rotation(v2.ToMultivector, v3.ToMultivector).IsA);
  writeln('Rotation  : bivector &     bivectors : ',  B1.ToMultivector.Rotation(B2.ToMultivector, B3.ToMultivector).IsA);
  writeln('Rotation  : bivector &    trivectors : ',  B1.ToMultivector.Rotation(I2.ToMultivector, I3.ToMultivector).IsA);
  writeln('Rotation  : bivector & quadrivectors : ',  B1.ToMultivector.Rotation(Q2.ToMultivector, Q3.ToMultivector).IsA);
  writeln('Rotation  : bivector &  multivectors : ',  B1.ToMultivector.Rotation(M2              , M3).IsA);

  writeln;
  writeln('TTRIVECTOR');
  writeln('Dot       : trivector &       vector  : ',  I1.ToMultivector.Dot(v2.ToMultivector).IsA);
  writeln('Dot       : trivector &     bivector  : ',  I1.ToMultivector.Dot(B2.ToMultivector).IsA);
  writeln('Dot       : trivector &    trivector  : ',  I1.ToMultivector.Dot(I2.ToMultivector).IsA);
  writeln('Dot       : trivector & quadrivector  : ',  I1.ToMultivector.Dot(Q2.ToMultivector).IsA);
  writeln('Dot       : trivector &  multivector  : ',  I1.ToMultivector.Dot(M2              ).IsA);
  writeln;
  writeln('Wedge     : trivector &       vector  : ',  I1.ToMultivector.Wedge(v2.ToMultivector).IsA);
  writeln('Wedge     : trivector &     bivector  : ',  I1.ToMultivector.Wedge(B2.ToMultivector).IsA);
  writeln('Wedge     : trivector &    trivector  : ',  I1.ToMultivector.Wedge(I2.ToMultivector).IsA);
  writeln('Wedge     : trivector & quadrivector  : ',  I1.ToMultivector.Wedge(Q2.ToMultivector).IsA);
  writeln('Wedge     : trivector &  multivector  : ',  I1.ToMultivector.Wedge(M2              ).IsA);
  writeln;
  writeln('Geometric : trivector &       vector  : ', (I1.ToMultivector*v2.ToMultivector).IsA);
  writeln('Geometric : trivector &     bivector  : ', (I1.ToMultivector*B2.ToMultivector).IsA);
  writeln('Geometric : trivector &    trivector  : ', (I1.ToMultivector*I2.ToMultivector).IsA);
  writeln('Geometric : trivector & quadrivector  : ', (I1.ToMultivector*Q2.ToMultivector).IsA);
  writeln('Geometric : trivector &  multivector  : ', (I1.ToMultivector*M2              ).IsA);
  writeln;
  writeln('Projection: trivector &       vector  : ',  I1.ToMultivector.Projection(v2.ToMultivector).IsA);
  writeln('Projection: trivector &     bivector  : ',  I1.ToMultivector.Projection(B2.ToMultivector).IsA);
  writeln('Projection: trivector &    trivector  : ',  I1.ToMultivector.Projection(I2.ToMultivector).IsA);
  writeln('Projection: trivector & quadrivector  : ',  I1.ToMultivector.Projection(Q2.ToMultivector).IsA);
  writeln('Projection: trivector &  multivector  : ',  I1.ToMultivector.Projection(M2              ).IsA);
  writeln;
  writeln('Rejection : trivector &       vector  : ',  I1.ToMultivector.Rejection(v2.ToMultivector).IsA);
  writeln('Rejection : trivector &     bivector  : ',  I1.ToMultivector.Rejection(B2.ToMultivector).IsA);
  writeln('Rejection : trivector &    trivector  : ',  I1.ToMultivector.Rejection(I2.ToMultivector).IsA);
  writeln('Rejection : trivector & quadrivector  : ',  I1.ToMultivector.Rejection(Q2.ToMultivector).IsA);
  writeln('Rejection : trivector &  multivector  : ',  I1.ToMultivector.Rejection(M2              ).IsA);
  writeln;
  writeln('Reflection: trivector &       vector  : ',  I1.ToMultivector.Reflection(v2.ToMultivector).IsA);
  writeln('Reflection: trivector &     bivector  : ',  I1.ToMultivector.Reflection(B2.ToMultivector).IsA);
  writeln('Reflection: trivector &    trivector  : ',  I1.ToMultivector.Reflection(I2.ToMultivector).IsA);
  writeln('Reflection: trivector & quadrivector  : ',  I1.ToMultivector.Reflection(Q2.ToMultivector).IsA);
  writeln('Reflection: trivector &  multivector  : ',  I1.ToMultivector.Reflection(M2              ).IsA);
  writeln;
  writeln('Rotation  : trivector &       vectors : ',  I1.ToMultivector.Rotation(v2.ToMultivector, v3.ToMultivector).IsA);
  writeln('Rotation  : trivector &     bivectors : ',  I1.ToMultivector.Rotation(B2.ToMultivector, B3.ToMultivector).IsA);
  writeln('Rotation  : trivector &    trivectors : ',  I1.ToMultivector.Rotation(I2.ToMultivector, I3.ToMultivector).IsA);
  writeln('Rotation  : trivector & quadrivectors : ',  I1.ToMultivector.Rotation(Q2.ToMultivector, Q3.ToMultivector).IsA);
  writeln('Rotation  : trivector &  multivectors : ',  I1.ToMultivector.Rotation(M2              , M3).IsA);

  writeln;
  writeln('TQUADRIVECTOR');
  writeln('Dot       : quadrivector &       vector  : ',  Q1.ToMultivector.Dot(v2.ToMultivector).IsA);
  writeln('Dot       : quadrivector &     bivector  : ',  Q1.ToMultivector.Dot(B2.ToMultivector).IsA);
  writeln('Dot       : quadrivector &    trivector  : ',  Q1.ToMultivector.Dot(I2.ToMultivector).IsA);
  writeln('Dot       : quadrivector & quadrivector  : ',  Q1.ToMultivector.Dot(Q2.ToMultivector).IsA);
  writeln('Dot       : quadrivector &  multivector  : ',  Q1.ToMultivector.Dot(M2              ).IsA);
  writeln;
  writeln('Wedge     : quadrivector &       vector  : ',  Q1.ToMultivector.Wedge(v2.ToMultivector).IsA);
  writeln('Wedge     : quadrivector &     bivector  : ',  Q1.ToMultivector.Wedge(B2.ToMultivector).IsA);
  writeln('Wedge     : quadrivector &    trivector  : ',  Q1.ToMultivector.Wedge(I2.ToMultivector).IsA);
  writeln('Wedge     : quadrivector & quadrivector  : ',  Q1.ToMultivector.Wedge(Q2.ToMultivector).IsA);
  writeln('Wedge     : quadrivector &  multivector  : ',  Q1.ToMultivector.Wedge(M2              ).IsA);
  writeln;
  writeln('Geometric : quadrivector &       vector  : ', (Q1.ToMultivector*v2.ToMultivector).IsA);
  writeln('Geometric : quadrivector &     bivector  : ', (Q1.ToMultivector*B2.ToMultivector).IsA);
  writeln('Geometric : quadrivector &    trivector  : ', (Q1.ToMultivector*I2.ToMultivector).IsA);
  writeln('Geometric : quadrivector & quadrivector  : ', (Q1.ToMultivector*Q2.ToMultivector).IsA);
  writeln('Geometric : quadrivector &  multivector  : ', (Q1.ToMultivector*M2              ).IsA);
  writeln;
  writeln('Projection: quadrivector &       vector  : ',  Q1.ToMultivector.Projection(v2.ToMultivector).IsA);
  writeln('Projection: quadrivector &     bivector  : ',  Q1.ToMultivector.Projection(B2.ToMultivector).IsA);
  writeln('Projection: quadrivector &    trivector  : ',  Q1.ToMultivector.Projection(I2.ToMultivector).IsA);
  writeln('Projection: quadrivector & quadrivector  : ',  Q1.ToMultivector.Projection(Q2.ToMultivector).IsA);
  writeln('Projection: quadrivector &  multivector  : ',  Q1.ToMultivector.Projection(M2              ).IsA);
  writeln;
  writeln('Rejection : quadrivector &       vector  : ',  Q1.ToMultivector.Rejection(v2.ToMultivector).IsA);
  writeln('Rejection : quadrivector &     bivector  : ',  Q1.ToMultivector.Rejection(B2.ToMultivector).IsA);
  writeln('Rejection : quadrivector &    trivector  : ',  Q1.ToMultivector.Rejection(I2.ToMultivector).IsA);
  writeln('Rejection : quadrivector & quadrivector  : ',  Q1.ToMultivector.Rejection(Q2.ToMultivector).IsA);
  writeln('Rejection : quadrivector &  multivector  : ',  Q1.ToMultivector.Rejection(M2              ).IsA);
  writeln;
  writeln('Reflection: quadrivector &       vector  : ',  Q1.ToMultivector.Reflection(v2.ToMultivector).IsA);
  writeln('Reflection: quadrivector &     bivector  : ',  Q1.ToMultivector.Reflection(B2.ToMultivector).IsA);
  writeln('Reflection: quadrivector &    trivector  : ',  Q1.ToMultivector.Reflection(I2.ToMultivector).IsA);
  writeln('Reflection: quadrivector & quadrivector  : ',  Q1.ToMultivector.Reflection(Q2.ToMultivector).IsA);
  writeln('Reflection: quadrivector &  multivector  : ',  Q1.ToMultivector.Reflection(M2              ).IsA);
  writeln;
  writeln('Rotation  : quadrivector &       vectors : ',  Q1.ToMultivector.Rotation(v2.ToMultivector, v3.ToMultivector).IsA);
  writeln('Rotation  : quadrivector &     bivectors : ',  Q1.ToMultivector.Rotation(B2.ToMultivector, B3.ToMultivector).IsA);
  writeln('Rotation  : quadrivector &    trivectors : ',  Q1.ToMultivector.Rotation(I2.ToMultivector, I3.ToMultivector).IsA);
  writeln('Rotation  : quadrivector & quadrivectors : ',  Q1.ToMultivector.Rotation(Q2.ToMultivector, Q3.ToMultivector).IsA);
  writeln('Rotation  : quadrivector &  multivectors : ',  Q1.ToMultivector.Rotation(M2              , M3).IsA);

  writeln;
  writeln('TMULTIVECTOR');
  writeln('Dot       : multivector &       vector  : ',  M1.Dot(v2.ToMultivector).IsA);
  writeln('Dot       : multivector &     bivector  : ',  M1.Dot(B2.ToMultivector).IsA);
  writeln('Dot       : multivector &    trivector  : ',  M1.Dot(I2.ToMultivector).IsA);
  writeln('Dot       : multivector & quadrivector  : ',  M1.Dot(Q2.ToMultivector).IsA);
  writeln('Dot       : multivector &  multivector  : ',  M1.Dot(M2              ).IsA);
  writeln;
  writeln('Wedge     : multivector &       vector  : ',  M1.Wedge(v2.ToMultivector).IsA);
  writeln('Wedge     : multivector &     bivector  : ',  M1.Wedge(B2.ToMultivector).IsA);
  writeln('Wedge     : multivector &    trivector  : ',  M1.Wedge(I2.ToMultivector).IsA);
  writeln('Wedge     : multivector & quadrivector  : ',  M1.Wedge(Q2.ToMultivector).IsA);
  writeln('Wedge     : multivector &  multivector  : ',  M1.Wedge(M2              ).IsA);
  writeln;
  writeln('Geometric : multivector &       vector  : ', (M1*v2.ToMultivector).IsA);
  writeln('Geometric : multivector &     bivector  : ', (M1*B2.ToMultivector).IsA);
  writeln('Geometric : multivector &    trivector  : ', (M1*I2.ToMultivector).IsA);
  writeln('Geometric : multivector & quadrivector  : ', (M1*Q2.ToMultivector).IsA);
  writeln('Geometric : multivector &  multivector  : ', (M1*M2              ).IsA);
  writeln;
  writeln('Projection: multivector &       vector  : ',  M1.Projection(v2.ToMultivector).IsA);
  writeln('Projection: multivector &     bivector  : ',  M1.Projection(B2.ToMultivector).IsA);
  writeln('Projection: multivector &    trivector  : ',  M1.Projection(I2.ToMultivector).IsA);
  writeln('Projection: multivector & quadrivector  : ',  M1.Projection(Q2.ToMultivector).IsA);
  writeln('Projection: multivector &  multivector  : ',  M1.Projection(M2              ).IsA);
  writeln;
  writeln('Rejection : multivector &       vector  : ',  M1.Rejection(v2.ToMultivector).IsA);
  writeln('Rejection : multivector &     bivector  : ',  M1.Rejection(B2.ToMultivector).IsA);
  writeln('Rejection : multivector &    trivector  : ',  M1.Rejection(I2.ToMultivector).IsA);
  writeln('Rejection : multivector & quadrivector  : ',  M1.Rejection(Q2.ToMultivector).IsA);
  writeln('Rejection : multivector &  multivector  : ',  M1.Rejection(M2              ).IsA);
  writeln;
  writeln('Reflection: multivector &       vector  : ',  M1.Reflection(v2.ToMultivector).IsA);
  writeln('Reflection: multivector &     bivector  : ',  M1.Reflection(B2.ToMultivector).IsA);
  writeln('Reflection: multivector &    trivector  : ',  M1.Reflection(I2.ToMultivector).IsA);
  writeln('Reflection: multivector & quadrivector  : ',  M1.Reflection(Q2.ToMultivector).IsA);
  writeln('Reflection: multivector &  multivector  : ',  M1.Reflection(M2              ).IsA);
  writeln;
  writeln('Rotation  : multivector &       vectors : ',  M1.Rotation(v2.ToMultivector, v3.ToMultivector).IsA);
  writeln('Rotation  : multivector &     bivectors : ',  M1.Rotation(B2.ToMultivector, B3.ToMultivector).IsA);
  writeln('Rotation  : multivector &    trivectors : ',  M1.Rotation(I2.ToMultivector, I3.ToMultivector).IsA);
  writeln('Rotation  : multivector & quadrivectors : ',  M1.Rotation(Q2.ToMultivector, Q3.ToMultivector).IsA);
  writeln('Rotation  : multivector &  multivectors : ',  M1.Rotation(M2              , M3).IsA);
  writeln;
  writeln(Format('Time elapsed : %ds', [SecondsBetween(Now, StartTime)]));
end.
